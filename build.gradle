

plugins {
    id "io.spring.dependency-management" version "0.3.1.RELEASE"
}

//"org.springframework.data:spring-data-jpa:$springDataJpaVersion"

//"org.springframework:spring-test"

defaultTasks = [
        ":shared-config:clean",
        ":shared-config:build",
        "clean",
        "sharedTestConfiguration",
        "sharedConfiguration",
        "build"
]

allprojects {
    apply plugin: 'io.spring.dependency-management'

    apply plugin: 'maven'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "http://54.149.121.23:8081/nexus/content/repositories/snapshots/"
        }


    }


    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "http://54.149.121.23:8081/nexus/content/repositories/snapshots/") {
                    authentication(userName: "deployment", password: "P1llar5-0f-w1nt3r")
                }
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:$springPlatformVersion"
            mavenBom "org.jboss.resteasy:resteasy-bom:$resteasyVersion"
        }


        dependencies {
            "org.eclipse.persistence:org.eclipse.persistence.moxy" moxyVersion
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api" hibernateJpaVersion


            dependencySet(
                    group:'com.netflix.astyanax',
                    version:"$astyanaxVersion"
            ) {
                entry 'astyanax-core'
                entry 'astyanax-thrift'
                entry 'astyanax-cassandra'
            }

        }



    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    configurations {
        tests
        sharedConfiguration
        sharedTestConfiguration
    }

    task testArtifact(type:Jar) {
        classifier = "tests"
        from sourceSets.test.output
    }

    artifacts {
        tests testArtifact
    }


    task sharedConfiguration(type:Copy) {
        from {
            project.configurations.sharedConfiguration.collect { zipTree(it)}
        }
        into("${project.buildDir}/classes/main")
        expand(project.properties)
    }

    task sharedTestConfiguration(type:Copy) {
        from {
            project.configurations.sharedTestConfiguration.collect { zipTree(it)}
        }
        into("${project.buildDir}/classes/test")
        expand(project.properties)
    }

    test.mustRunAfter sharedTestConfiguration

    build.mustRunAfter sharedConfiguration

    defaultTasks = [
            'clean',
            'sharedConfiguration',
            'sharedTestConfiguration',
            'build'
    ]


    dependencies {
        testCompile "junit:junit:$junitVersion"
    }

}
