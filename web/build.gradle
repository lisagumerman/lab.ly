

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.0.2'
    }
}

apply plugin: 'com.bmuschko.cargo'
apply plugin: 'war'
apply plugin: 'java'
repositories {
    mavenCentral()
    jcenter()
}

configurations {
    provided
    site
}

dependencies {
    sharedConfiguration project(":shared-config")

    site 'io.lably:lably-marketing:1.0.0-SNAPSHOT'
    compile 'org.springframework:spring-web'
    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-beans'
    compile 'org.jboss.resteasy:resteasy-spring:3.0.10.Final'
    compile 'org.jboss.resteasy:resteasy-jaxrs:3.0.10.Final'
    compile 'org.jboss.resteasy:resteasy-cdi:3.0.10.Final'
    compile 'org.jboss.resteasy:resteasy-multipart-provider:3.0.10.Final'
    compile 'org.jboss.resteasy:resteasy-jaxb-provider:3.0.10.Final'
    compile 'org.jboss.resteasy:resteasy-client:3.0.10.Final'


//    compile 'com.sun.xml.bind:jaxb-core:2.2.7'

    compile 'org.eclipse.persistence:org.eclipse.persistence.moxy:2.5.2'
    compile 'javax.inject:javax.inject:1'
    compile project(":model:model-api")
    compile "org.ow2.asm:asm:4.0"
    compile project(":common:common-core")
    compile project(":service:service-core")
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}


cargo {
    containerId = 'wildfly8x'
    local {
        homeDir = file('/home/haswell/dev/tools/webservers/wildfly/8.2.0.Final')
    }
}

task explode(type: Copy) {
    configurations.site.asFileTree.each {
        from( zipTree(it) )
    }
    into file("${project.buildDir}/site/")
}

war {
    from "${project.buildDir}/site"
}

war.mustRunAfter explode


test.mustRunAfter cargoStartLocal
cargoStopLocal.mustRunAfter test




